L'esercizio richiede di analizzare una sequenza binaria contenuta in un file di testo e di calcolare la frequenza delle sottosequenze di lunghezza compresa tra due valori a e b. Successivamente, bisogna restituire le frequenze più alte, con ciascuna frequenza associata alle sottosequenze che hanno quella frequenza.

Dettagli del problema:

Input:

ftesto: un file di testo contenente una sequenza binaria.
a, b: due interi che indicano l'intervallo delle lunghezze delle sottosequenze di cui calcolare la frequenza.
n: il numero massimo di frequenze da restituire.
Output:

Una lista di tuple, dove ogni tupla contiene:
La frequenza di una sottosequenza.
La lista delle sottosequenze che hanno quella frequenza, ordinate lessicograficamente.
La lista di tuple deve essere ordinata per frequenza (in ordine crescente), e la lista di sottosequenze per ciascuna frequenza deve essere ordinata lessicograficamente.
Funzionamento:

Si deve contare la frequenza di tutte le sottosequenze di lunghezza compresa tra a e b.
Devono essere restituite le prime n frequenze massime, ma se ci sono meno di n frequenze distinte, si restituiscono tutte.
Esempio:

Per il file di esempio ft1.txt, se si richiede una lista con le 20 frequenze massime, la funzione restituirà una lista di tuple con la frequenza e le sottosequenze corrispondenti, ordinata in base alla frequenza e lessicograficamente per le sottosequenze.

Ad esempio, ex1('ft1.txt', 2, 4, 20) restituisce la lista:
    [ (4, ['0001', '0011', '1100' ]),
      (5, ['011', 1000', '110' ]),
      (6, ['0000', '111']),
      (7, ['0010','1001' ]),
      (8, ['0100']),
      (10,['010']),
      (11,['000', '001', '11']),
      (12,['100']),
      (15,['01','10']),
      (23,['00'])
    ]

L'obiettivo è implementare una funzione che esegua questa analisi in modo efficiente.